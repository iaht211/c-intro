B1:
A control center want to analyze a sequence of signals a1, a2, . . ., an in which ai is the signal at time-point i 
(i = 1,...,n) by counting the number Q of time-points i in which 
(a i> a i-1 and a i > a i+1 , for i = 2, 3, ..., n-1). Write a program for computing Q.

Input
Line 1: contains an integer n (3 <= n <= 1000000)
Line 2: contains a
1
, a
2
, . . ., a
n
 (1 <= ai <= 1000000)
Output
Write the value Q

Example
Input
8
5  3  7  6  6  10  8  2

Output
2

Explanation: There are two time-points 3 and 6 satisfying the given condition 
B2:------------------------------------------------------------------------------------------
Given a sequence of n tasks 1, 2, ..., n. The task i has starting time is ti which is under the format YYYY-MM-DD hh:mm:ss (for example: 2021-06-03 10:34:21) and the duration Di (in seconds). Compute the finising time of n tasks.

Input
The first block is the sequence of continuous days, each day is in a line under the format YYYY-MM-DD. The first block is terminated by a line containing the * character
The second block contains n lines, each line i (i = 1,...,n) contains ti and Di
Output
Each line i (i = 1, ..., n) contains the finishing time of the task i under the format YYYY-MM-DD hh:mm:ss

Example
Input
2020-12-29
2020-12-30
2020-12-31
2021-01-01
2021-01-02
2021-01-03
*
2020-12-30 21:23:02 1
2020-12-30 21:33:02 86400
2020-12-30 21:33:02 172800
***
Output
2020-12-30 21:23:03
2020-12-31 21:33:02
2021-01-01 21:33:02
 B3:-----------------------------------------------------------------------------------------
 The data about bank transactions consists of a sequence of transactions: the information of each transaction has the following format:
                                                                    <from_account>   <to_account>   <money>   <time_point>   <atm>
In which:
•	<from_account>: the account from which money is transferred (which is a string of length from 6 to 20 )
•	<to_account>: the account which receives money in the transaction (which is a string of length from 6 to 20)
•	<money>: amount of money transferred in the transaction (which is an integer from 1 to 10000)
•	<time_point>: the time point at which the transaction is performed, it is a string under the format HH:MM:SS  (hour: minute: second)
•	<atm>: the code of the ATM where the transaction is taken (a string of length from 3 to 10)
Example: T00112233445 T001234002 2000 08:36:25 BIDV (at the ATM BIDV, account T00112233445 transfers 2000$ to account T001234002 at time point 08:36:25 (08 hour, 36 minutes, 25 seconds) 
A transaction cycle of length k starting from account a1 is defined to be a sequence of account a1, a2, …, ak in which there are transactions from account a1 to a2, from a2 to a3, …, from ak to a1.
Write a program that process the following queries: 
?number_transactions: compute the total number of transactions of the data
?total_money_transaction: compute the total amount of money of transactions  
?list_sorted_accounts: compute the sequence of bank accounts (including sending and receiving accounts) appearing in the transaction (sorted in an increasing (alphabetical) order)  
?total_money_transaction_from <account>: compute the total amount of money transferred from the account <account>  
?inspect_cycle <account> k : return 1 if there is a transaction cycle of length k, starting from <account>, and return 0, otherwise
Input (stdin)
The input consists of 2 blocks of information: the data block and the query block
•	The data block consists of lines:
o	Each line contains the information about a transaction described above
o	The data is terminated by a line containing #
•	The query block consists of lines:
o	Each line is a query described above
o	The query block is terminated by a line containing #

Output (stdout)
•	Print to stdout (in each line) the result of each query described above

Example
Input
T000010010 T000010020 1000 10:20:30 ATM1
T000010010 T000010030 2000 10:02:30 ATM2
T000010010 T000010040 1500 09:23:30 ATM1
T000010020 T000010030 3000 08:20:31 ATM1
T000010030 T000010010 4000 12:40:00 ATM2
T000010040 T000010010 2000 10:30:00 ATM1
T000010020 T000010040 3000 08:20:31 ATM1
T000010040 T000010030 2000 11:30:00 ATM1
T000010040 T000010030 1000 18:30:00 ATM1
#
?number_transactions
?total_money_transaction
?list_sorted_accounts
?total_money_transaction_from T000010010
?inspect_cycle T000010010 3
#
Output
9
19500
T000010010 T000010020 T000010030 T000010040
4500
1

B4:------------------------------------------------------------------------
Write C program that reads an integer value N from stdin, prints to stdout the number Q ways to assign values 1, 2, …, 9 to characters I, C, T, H, U, S, K (characters are assigned with different values) such that:
ICT - K62 + HUST = N
Input
Unique line contains an integer N (1 <= N <= 10
5
)
Output
Write the value Q
Example
Input
2000
Output
28